/*
 * Alertmanager API
 *
 * API of the Prometheus Alertmanager (https://github.com/prometheus/alertmanager)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AlertStatus {
    #[serde(rename = "state")]
    pub state: State,
    #[serde(rename = "silencedBy")]
    pub silenced_by: Vec<String>,
    #[serde(rename = "inhibitedBy")]
    pub inhibited_by: Vec<String>,
}

impl AlertStatus {
    pub fn new(state: State, silenced_by: Vec<String>, inhibited_by: Vec<String>) -> AlertStatus {
        AlertStatus {
            state,
            silenced_by,
            inhibited_by,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "unprocessed")]
    Unprocessed,
    #[serde(rename = "active")]
    Active,
    #[serde(rename = "suppressed")]
    Suppressed,
}

impl Default for State {
    fn default() -> State {
        Self::Unprocessed
    }
}

