//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "annotations")]
pub struct Model {
    #[sea_orm(unique)]
    pub id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub name: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub value: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::alerts_annotations::Entity")]
    AlertsAnnotations,
}

impl Related<super::alerts_annotations::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AlertsAnnotations.def()
    }
}

impl Related<super::alerts::Entity> for Entity {
    fn to() -> RelationDef {
        super::alerts_annotations::Relation::Alerts.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::alerts_annotations::Relation::Annotations.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
