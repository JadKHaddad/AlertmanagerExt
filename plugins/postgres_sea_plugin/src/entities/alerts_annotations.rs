//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "alerts_annotations")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub alert_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub annotation_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::alerts::Entity",
        from = "Column::AlertId",
        to = "super::alerts::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Alerts,
    #[sea_orm(
        belongs_to = "super::annotations::Entity",
        from = "Column::AnnotationId",
        to = "super::annotations::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Annotations,
}

impl Related<super::alerts::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Alerts.def()
    }
}

impl Related<super::annotations::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Annotations.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
